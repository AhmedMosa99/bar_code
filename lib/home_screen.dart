import 'package:barcode_scan2/platform_wrapper.dart';import 'package:barcode_widget/barcode_widget.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_svg/flutter_svg.dart';import 'bar_code_model.dart';class HomeScreen extends StatefulWidget {  const HomeScreen({Key? key}) : super(key: key);  @override  State<HomeScreen> createState() => _HomeScreenState();}class _HomeScreenState extends State<HomeScreen> {  String? data = "9781911223139";  int count = 1;  bool isShow=true; Color? color=Color(0xff33333D).withOpacity(.4);  List<BarCode> list = [    BarCode("Juice", "1234567890128", 1),  ];  TextEditingController?textEditingController=TextEditingController();  addOrCreate(String barCode) {    int index = list.indexWhere((element) => element.storageNumber == barCode);    if (index != -1) {      if (list[index].quantity! < 5) {        list[index].quantity = list[index].quantity! + 1;        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("The number has been increased successfully")));      } else {        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Sorry, it cannot be increased if you reach the limit")));      }    } else {   count=   count + 1;      setState(() {      });   ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("The product has been added successfully ")));      list.add(BarCode("Juice $count", barCode, 1));    }  }  compare(String barCode) {    int index = list.indexWhere((element) => element.storageNumber == barCode);    if (index != -1) {      color=Color(0xff12F330);ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Bar code is exist ")));    } else {      color=Color(0xffE52626);      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Bar code is not exist ")));      setState(() {      });    }  }  void showMyDialog(BuildContext context) {    showDialog(      context: context,      builder: (BuildContext context) {        return CupertinoAlertDialog(          content: Column(            children: [              Text(                'Enter your Barcode:',                style: TextStyle(fontSize: 16),              ),              SizedBox(                height: 16,              ),              CupertinoTextField(                controller: textEditingController,                placeholder: 'Barcode',              ),            ],          ),          actions: [            CupertinoDialogAction(              child: Text('Submit'),              onPressed: () {                data = textEditingController!.text;                addOrCreate(data!);                setState(() {                });                // Perform your desired action here Navigator.of(context)                Navigator.pop(context); // Close the dialog              },            ),          ],        );      },    );  }  @override  Widget build(BuildContext context) {    return Scaffold(      body: SafeArea(        child: Padding(          padding: const EdgeInsets.all(16.0),          child: Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Icon(Icons.arrow_back),              SizedBox(                height: 20,              ),         ! isShow!?  Container():  Container(                height: 316,                width: double.infinity,                decoration: BoxDecoration(                    color:color!,                    borderRadius: BorderRadius.circular(10)),                child: Padding(                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 18),                  child: Column(                    children: [                      Row(                        mainAxisAlignment: MainAxisAlignment.spaceBetween,                        children: [                          SvgPicture.asset(                              "assets/images/Iconly-Bold-Setting.svg"),                          SvgPicture.asset("assets/images/note-fill.svg"),                          InkWell(                            onTap: () {                              showMyDialog(context);                            },                            child: Container(                                width: 24,                                height: 22,                                decoration: BoxDecoration(                                    color: Colors.white,                                    borderRadius: BorderRadius.circular(8)),                                child: SvgPicture.asset(                                  "assets/images/A.svg",                                  color: Colors.black,                                )),                          ),                          SvgPicture.asset("assets/images/flashlight-fill.svg"),                        ],                      ),                      SizedBox(                        height: 50,                      ),                      Container(                        padding:                            EdgeInsets.symmetric(vertical: 10, horizontal: 20),                        color: Colors.white,                        child: BarcodeWidget(                          barcode: Barcode                              .code128(), // Specify the barcode type (e.g., code128, qrCode, etc.)                          data: data!, // The data to be encoded in the barcode                          width: 200, // Specify the width of the barcode image                          height:                              100, // S // pecify the height of the barcode image                          style: TextStyle(                              fontSize:                                  16.0), // Customize the text style of the barcode                        ),                      ) // Center( //   child: Container( //     child: //         Image.asset("assets/images/sample-barcode.png"), //   ), // )                    ],                  ),                ),              ),              SizedBox(                height: 20,              ),              Expanded(                child: ListView.separated(                  itemBuilder: (BuildContext context, int index) {                    return Column(                      children: [                        Row(                          children: [                            Text(                              "Product name: ",                              style: TextStyle(                                  fontSize: 14, fontWeight: FontWeight.bold),                            ),                            Text(                              list[index].productName!,                              style: TextStyle(                                  fontSize: 14,                                  color: Color(0xff2E3192),                                  fontWeight: FontWeight.bold),                            ),                          ],                        ),                        SizedBox(                          height: 8,                        ),                        Row(                          children: [                            Text(                              "storage number: ",                              style: TextStyle(                                  fontSize: 14, fontWeight: FontWeight.bold),                            ),                            Expanded(                                child: Text(                              list[index].storageNumber!,                              style: TextStyle(                                  fontSize: 14,                                  color: Color(0xff2E3192),                                  fontWeight: FontWeight.bold),                            )),                          ],                        ),                        SizedBox(                          height: 8,                        ),                        Row(                          children: [                            Text(                              "Quantity: ",                              style: TextStyle(                                  fontSize: 14, fontWeight: FontWeight.bold),                            ),                            Text(                              list[index].quantity!.toString(),                              style: TextStyle(                                  fontSize: 14,                                  color: Color(0xff2E3192),                                  fontWeight: FontWeight.bold),                            ),                          ],                        ),                      ],                    );                  },                  separatorBuilder: (BuildContext context, int index) {                    return SizedBox(                      height: 20,                    );                  },                  itemCount: list.length,                ),              ),              InkWell(                  onTap: (){                    isShow=!isShow;                    setState(() {                    });                  },                  child: Row(                children: [                isShow? SvgPicture.asset("assets/images/Camera.svg"): SvgPicture.asset("assets/images/Component.svg"),                  SizedBox(                    width: 20,                  ),                  SizedBox(                      width: 300,                      height: 44,                      child: ElevatedButton(                        onPressed: () async {                          showModalBottomSheet(                            context: context,                            builder: (BuildContext context) {                              return Container(                                padding: EdgeInsets.all(16),                                child: Column(                                  mainAxisSize: MainAxisSize.min,                                  crossAxisAlignment: CrossAxisAlignment.stretch,                                  children: [                                    ElevatedButton(                                      onPressed: () async {                                        var result = await BarcodeScanner.scan();                                        data = result.rawContent;                                        addOrCreate(result.rawContent);                                        setState(() {                                        });                                        Navigator.pop(context); // Close the bottom sheet                                      },                                      child: Text('Add Bar Code'),                                    ),                                    SizedBox(height: 16),                                    ElevatedButton(                                      onPressed: () async{                                        var result = await BarcodeScanner.scan();                                        data = result.rawContent;                                   await     compare(result.rawContent);                                        setState(() {                                        });                                        // Logic for matching a promo code                                        Navigator.pop(context); // Close the bottom sheet                                      },                                      child: Text('Match Bar Code'),                                    ),                                  ],                                ),                              );                            },                          );                        },                        child: Text("Scan"),                        style: ElevatedButton.styleFrom(                            backgroundColor: Color(0xff2E3192)),                      ))                ],              ))            ],          ),        ),      ),    );  }}